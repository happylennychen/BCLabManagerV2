<UserControl x:Class="BCLabManager.View.AllProgramsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
		     xmlns:vm="clr-namespace:BCLabManager.ViewModel"
             xmlns:v="clr-namespace:BCLabManager.View"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800">
    <UserControl.Resources>

        <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#66000088" Offset="0" />
            <GradientStop Color="#BB000088" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <!-- 
      Stretch the content of each cell so that we can 
      right-align text in the Total Sales column. 
      -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="ToolTip" Value="{Binding Path=Description}"></Setter>
        </Style>

        <CollectionViewSource x:Key="programsCollectionViewSource" Source="{Binding Path=AllPrograms}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Ascending"></scm:SortDescription>
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Project"></PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="subsCollectionViewSource" Source="{Binding Path=Recipes}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Temperature" Direction="Ascending"></scm:SortDescription>
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Temperature"></PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="ftrsCollectionViewSource" Source="{Binding Path=TestRecords}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Ascending"></scm:SortDescription>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="strsCollectionViewSource" Source="{Binding Path=SecondTestRecords}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Ascending"></scm:SortDescription>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        
        <CollectionViewSource x:Key="StepCVS" Source="{Binding Path=Steps}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Index" Direction="Ascending"></scm:SortDescription>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <DataTemplate x:Key="ProgressBar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=AbandonedPercentage}"/>
                    <ColumnDefinition Width="{Binding Path=InvalidPercentage}"/>
                    <ColumnDefinition Width="{Binding Path=CompletedPercentage}"/>
                    <ColumnDefinition Width="{Binding Path=ExecutingPercentage}"/>
                    <ColumnDefinition Width="{Binding Path=WaitingPercentage}"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0" Fill="{StaticResource AbandonedBrush}" StrokeThickness="1"></Rectangle>
                <Rectangle Grid.Column="1" Fill="{StaticResource InvalidBrush}" StrokeThickness="1"></Rectangle>
                <Rectangle Grid.Column="2" Fill="{StaticResource CompletedBrush}" StrokeThickness="1"></Rectangle>
                <Rectangle Grid.Column="3" Fill="{StaticResource ExecutingBrush}" StrokeThickness="1"></Rectangle>
                <Rectangle Grid.Column="4" Fill="{StaticResource WaitingBrush}" StrokeThickness="1"></Rectangle>
            </Grid>
        </DataTemplate>


        <DataTemplate x:Key="StartTime">
            <TextBlock Text="{Binding Path=StartTime, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Path=StartTimeColor, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
        </DataTemplate>

        <DataTemplate x:Key="EndTime">
            <TextBlock Text="{Binding Path=EndTime, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Path=EndTimeColor, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
        </DataTemplate>

        <v:LoopLabelConverter x:Key="llc"></v:LoopLabelConverter>
        <v:IndexConverter x:Key="idc"></v:IndexConverter>
        <v:JumpConditionConverter x:Key="jcc"></v:JumpConditionConverter>
        <Style x:Key="ValueStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <HierarchicalDataTemplate DataType="{x:Type vm:StepV2ViewModel}" 
                                  ItemsSource="{Binding Path=CutOffBehaviors}">
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" DockPanel.Dock="Left" Margin="0,0,10,0">STEP</TextBlock>
                <TextBlock Text="Index="/>
                <TextBlock Text="{Binding Path=Index}" Style="{StaticResource ValueStyle}" Margin="0,0,5,0"  />
                <TextBlock Text="Mode="/>
                <TextBlock Text="{Binding Path=TesterAction.Mode}" Style="{StaticResource ValueStyle}"  Margin="0,0,5,0" />
                <TextBlock Text="Voltage="/>
                <TextBlock Text="{Binding Path=TesterAction.Voltage}" Style="{StaticResource ValueStyle}"  Margin="0,0,5,0" />
                <TextBlock Text="Current="/>
                <TextBlock Text="{Binding Path=TesterAction.Current}" Style="{StaticResource ValueStyle}"  Margin="0,0,5,0" />
                <TextBlock Text="Power="/>
                <TextBlock Text="{Binding Path=TesterAction.Power}" Style="{StaticResource ValueStyle}" />
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type vm:CutOffBehaviorViewModel}"
                                  ItemsSource="{Binding Path=JumpBehaviors}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="COB" FontWeight="Bold" Margin="0,0,5,0" />
                <TextBlock Text="{Binding Path=Condition.Parameter}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Mark}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Value}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type vm:JumpBehaviorViewModel}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="JPB" FontWeight="Bold" Margin="0,0,5,0" />
                <TextBlock Text="{Binding Path=Condition.Parameter}" Margin="0,0,5,0" Visibility="{Binding Path=Condition.Parameter, Converter={StaticResource jcc}}" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Mark}" Margin="0,0,5,0" Visibility="{Binding Path=Condition.Parameter, Converter={StaticResource jcc}}" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Value}" Margin="0,0,5,0" Visibility="{Binding Path=Condition.Parameter, Converter={StaticResource jcc}}" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="JumpType="/>
                <TextBlock Text="{Binding Path=JumpType}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="Index=" Visibility="{Binding Path=JumpType, Converter={StaticResource idc}}"/>
                <TextBlock Text="{Binding Path=Index}" Margin="0,0,5,0" Visibility="{Binding Path=JumpType, Converter={StaticResource idc}}" Style="{StaticResource ValueStyle}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*"></RowDefinition>
            <RowDefinition Height="4"></RowDefinition>
            <RowDefinition Height="50*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="57*"></ColumnDefinition>
            <ColumnDefinition Width="4"></ColumnDefinition>
            <ColumnDefinition Width="43*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Row="0" Header="Programs">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Export Project" Command="{Binding Path=ExportProjectCommand}" Margin="0,5,5,0" Width="100"></Button>
                    <Button Content="Export Program" Command="{Binding Path=ExportProgramCommand}" Margin="0,5,5,0" Width="100"></Button>
                    <Button Content="_Create RC Program" Command="{Binding Path=CreateRCProgramCommand}" Margin="0,5,5,0" Width="60" Visibility="Collapsed"></Button>
                    <Button Content="_Abandon" Command="{Binding Path=ProgramInvalidateCommand}" Margin="0,5,15,0" Width="60"></Button>
                    <Button Content="_Create" Command="{Binding Path=CreateCommand}" Margin="0,5,5,0" Width="60"></Button>
                    <Button Content="_Edit" Command="{Binding Path=EditCommand}" Margin="0,5,5,0" Width="60" Visibility="Collapsed"></Button>
                    <Button Content="_Save As" Command="{Binding Path=SaveAsCommand}" Margin="0,5,5,0" Width="60" Visibility="Collapsed"></Button>
                </StackPanel>
                <DataGrid GridLinesVisibility="None" Background="White"
                          x:Name="Programlist" AutoGenerateColumns="False"
                          ItemsSource="{Binding Source={StaticResource programsCollectionViewSource}}"
                          SelectedItem="{Binding Path=SelectedProgram, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock Text="{Binding Path=Description}" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Progress" CellTemplate="{StaticResource ProgressBar}" Width="100"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=Name}"></DataGridTextColumn>
                        <!--<DataGridTextColumn Header="Project" IsReadOnly="True" Binding="{Binding Path=Project}"></DataGridTextColumn>-->
                        <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding Path=Type}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Requester" IsReadOnly="True" Binding="{Binding Path=Requester}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Request Time" IsReadOnly="True" Binding="{Binding Path=RequestTime}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Start Time" CellTemplate="{StaticResource StartTime}"></DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="End Time" CellTemplate="{StaticResource EndTime}"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Duration" IsReadOnly="True" Binding="{Binding Path=Duration}"></DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="GroupItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True">
                                                    <Expander.Header>
                                                        <TextBlock Text="{Binding Path=Name}"></TextBlock>
                                                    </Expander.Header>
                                                    <ItemsPresenter/>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </DockPanel>
        </GroupBox>
        <GroupBox Grid.Row="0" Grid.Column="2" Header="Recipes">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Name="RecipeButtonPanel">
                    <Button Content="_Abandon" Command="{Binding Path=AbandonCommand}" Margin="0,5,5,0" Width="60"></Button>
                </StackPanel>
                <DataGrid GridLinesVisibility="None" Background="White"
                          x:Name="Recipelist" AutoGenerateColumns="False"
                          ItemsSource="{Binding Source={StaticResource subsCollectionViewSource}}"
                          SelectedItem="{Binding Path=SelectedRecipe, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Progress" CellTemplate="{StaticResource ProgressBar}"></DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="Temperature" IsReadOnly="True" Binding="{Binding Path=Temperature}"></DataGridTextColumn>-->
                        <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=Name}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Start Time" CellTemplate="{StaticResource StartTime}"></DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="End Time" CellTemplate="{StaticResource EndTime}"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Duration" IsReadOnly="True" Binding="{Binding Path=Duration}"></DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="GroupItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True">
                                                    <Expander.Header>
                                                        <TextBlock Text="{Binding Path=Name}"></TextBlock>
                                                    </Expander.Header>
                                                    <ItemsPresenter/>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </DockPanel>
        </GroupBox>
        <GroupBox Grid.Row="2" Grid.Column="0" Header="Test Records">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="DirectCommitBtn" Content="_Direct Commit" Command="{Binding Path=DirectCommitCommand}" Margin="0,5,15,0" Width="100"></Button>
                    <Button x:Name="ExecuteBtn" Content="_Execute" Command="{Binding Path=ExecuteCommand}" Margin="0,5,5,0" Width="60" Visibility="Collapsed"></Button>
                    <Button x:Name="CommitBtn" Content="_Commit" Command="{Binding Path=CommitCommand}" Margin="0,5,5,0" Width="60" Visibility="Collapsed"></Button>
                    <Button x:Name="InvalidateBtn" Content="_Invalidate" Command="{Binding Path=InvalidateCommand}" Margin="0,5,5,0" Width="60"></Button>
                    <Button x:Name="ViewDataBtn" Content="_View Data" Command="{Binding Path=ViewCommand}" Margin="0,5,5,0" Width="60"></Button>
                    <Button x:Name="AddBtn" Content="_Add" Command="{Binding Path=AddCommand}" Margin="0,5,5,0" Width="60"></Button>
                </StackPanel>
                <DataGrid GridLinesVisibility="None" CanUserSortColumns="False" Background="White"
                          x:Name="TestRecordList" AutoGenerateColumns="False"
                          ItemsSource="{Binding Path=TestRecords}"
                          SelectedItem="{Binding Path=SelectedTestRecord, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Progress" CellTemplate="{StaticResource ProgressBar}"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Status" IsReadOnly="True" Binding="{Binding Path=Status}"></DataGridTextColumn>
                        <DataGridTextColumn Header="BatteryType" IsReadOnly="True" Binding="{Binding Path=BatteryTypeStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Battery" IsReadOnly="True" Binding="{Binding Path=BatteryStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Chamber" IsReadOnly="True" Binding="{Binding Path=ChamberStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Tester" IsReadOnly="True" Binding="{Binding Path=TesterStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Channel" IsReadOnly="True" Binding="{Binding Path=ChannelStr}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Start Time" CellTemplate="{StaticResource StartTime}"></DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="End Time" CellTemplate="{StaticResource EndTime}"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Duration" IsReadOnly="True" Binding="{Binding Path=Duration}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Last Cycle" IsReadOnly="True" Binding="{Binding Path=LastCycle}"></DataGridTextColumn>
                        <DataGridTextColumn Header="New Cycle" IsReadOnly="True" Binding="{Binding Path=NewCycle}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Discharge Capacity" IsReadOnly="True" Binding="{Binding Path=DischargeCapacity}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
        <GroupBox Grid.Row="2" Grid.Column="2" Header="Free Test Records" Visibility="Collapsed">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Name="FreeTestRecordButtonPanel">
                    <Button Content="Attach" Command="{Binding Path=AttachCommand}" Margin="0,5,15,0" Width="100"></Button>
                    <Button Content="_Direct Commit" Command="{Binding Path=DirectCommitFreeCommand}" Margin="0,5,15,0" Width="100"></Button>
                    <Button Content="_Execute" Command="{Binding Path=ExecuteFreeCommand}" Margin="0,5,5,0" Width="60"></Button>
                    <Button Content="_Commit" Command="{Binding Path=CommitFreeCommand}" Margin="0,5,5,0" Width="60"></Button>
                    <Button Content="_Add" Command="{Binding Path=AddFreeCommand}" Margin="0,5,5,0" Width="60"></Button>
                </StackPanel>
                <DataGrid GridLinesVisibility="None" CanUserSortColumns="False" Background="White"
                          x:Name="FreeTestRecordList" AutoGenerateColumns="False"
                          ItemsSource="{Binding Path=FreeTestRecords}"
                          SelectedItem="{Binding Path=SelectedFreeTestRecord, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Progress" CellTemplate="{StaticResource ProgressBar}"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Status" IsReadOnly="True" Binding="{Binding Path=Status}"></DataGridTextColumn>
                        <DataGridTextColumn Header="BatteryType" IsReadOnly="True" Binding="{Binding Path=BatteryTypeStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Battery" IsReadOnly="True" Binding="{Binding Path=BatteryStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Chamber" IsReadOnly="True" Binding="{Binding Path=ChamberStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Tester" IsReadOnly="True" Binding="{Binding Path=TesterStr}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Channel" IsReadOnly="True" Binding="{Binding Path=ChannelStr}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Start Time" CellTemplate="{StaticResource StartTime}"></DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="End Time" CellTemplate="{StaticResource EndTime}"></DataGridTemplateColumn>
                        <DataGridTextColumn Header="Duration" IsReadOnly="True" Binding="{Binding Path=Duration}"></DataGridTextColumn>
                        <DataGridTextColumn Header="New Cycle" IsReadOnly="True" Binding="{Binding Path=NewCycle}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
        <GroupBox Grid.Row="2" Grid.Column="2" Header="Recipe Details">
            <TreeView ItemsSource="{Binding Source={StaticResource StepCVS}}" x:Name="Steps">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True" />
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </GroupBox>
    </Grid>
</UserControl>
