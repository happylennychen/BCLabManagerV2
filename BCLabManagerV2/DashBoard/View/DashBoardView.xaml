<UserControl x:Class="BCLabManager.View.DashBoardView" Background="White"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:src="clr-namespace:BCLabManager.View"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d"  FontSize="12">
    <UserControl.Resources>
        <src:HeightMultiConverter x:Key="hmc"></src:HeightMultiConverter>
        <src:PercentageConverter x:Key="percentc"></src:PercentageConverter>
        <DataTemplate x:Key="BatteryStackedColumn">
            <DockPanel LastChildFill="True" MinWidth="70">
                <TextBlock DockPanel.Dock="Bottom" Margin="0,3" HorizontalAlignment="Center" FontWeight="Bold">Batteries</TextBlock>
                <Border Width="30" BorderBrush="Black" BorderThickness="1">
                    <Grid>
                        <Border x:Name="battotalgrid" Background="{StaticResource IdleBrush}" VerticalAlignment="Stretch">
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Path=BatteryAmount}"></TextBlock>
                        </Border>
                        <Border Background="{StaticResource UsingBrush}" VerticalAlignment="Bottom">
                            <Border.Height>
                                <MultiBinding Converter="{StaticResource hmc}">
                                    <Binding Path="BatteryAmount"></Binding>
                                    <Binding Path="UsingBatteryAmount"></Binding>
                                    <Binding Path="ActualHeight" ElementName="battotalgrid"></Binding>
                                </MultiBinding>
                            </Border.Height>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Path=UsingBatteryAmount}" ></TextBlock>
                        </Border>
                    </Grid>
                </Border>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="ChamberStackedColumn">
            <DockPanel LastChildFill="True" MinWidth="70">
                <TextBlock DockPanel.Dock="Bottom" Margin="0,3" HorizontalAlignment="Center" FontWeight="Bold">Chambers</TextBlock>
                <Border Width="30" BorderBrush="Black" BorderThickness="1">
                    <Grid>
                        <Grid x:Name="cmbtotalgrid" Background="{StaticResource IdleBrush}" VerticalAlignment="Stretch">
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Path=ChamberAmount}"></TextBlock>
                        </Grid>
                        <Grid Background="{StaticResource UsingBrush}" VerticalAlignment="Bottom">
                            <Grid.Height>
                                <MultiBinding Converter="{StaticResource hmc}">
                                    <Binding Path="ChamberAmount"></Binding>
                                    <Binding Path="UsingChamberAmount"></Binding>
                                    <Binding Path="ActualHeight" ElementName="cmbtotalgrid"></Binding>
                                </MultiBinding>
                            </Grid.Height>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Path=UsingChamberAmount}" ></TextBlock>
                        </Grid>
                    </Grid>
                </Border>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="ChannelStackedColumn">
            <DockPanel LastChildFill="True" MinWidth="70">
                <TextBlock DockPanel.Dock="Bottom" Margin="0,3" HorizontalAlignment="Center" FontWeight="Bold">Channels</TextBlock>
                <Border Width="30" BorderBrush="Black" BorderThickness="1">
                    <Grid>
                        <Grid x:Name="tstctotalgrid" Background="{StaticResource IdleBrush}" VerticalAlignment="Stretch">
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Path=ChannelAmount}"></TextBlock>
                        </Grid>
                        <Grid Background="{StaticResource UsingBrush}" VerticalAlignment="Bottom">
                            <Grid.Height>
                                <MultiBinding Converter="{StaticResource hmc}">
                                    <Binding Path="ChannelAmount"></Binding>
                                    <Binding Path="UsingChannelAmount"></Binding>
                                    <Binding Path="ActualHeight" ElementName="tstctotalgrid"></Binding>
                                </MultiBinding>
                            </Grid.Height>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Path=UsingChannelAmount}" ></TextBlock>
                        </Grid>
                    </Grid>
                </Border>
            </DockPanel>
        </DataTemplate>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <!-- 
      Stretch the content of each cell so that we can 
      right-align text in the Total Sales column. 
      -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Cursor" Value="14"></Setter>
            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"></EventSetter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40*"></ColumnDefinition>
            <ColumnDefinition Width="0"></ColumnDefinition>
            <ColumnDefinition Width="60*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <GroupBox Header="Statistics" Margin="20">
            <Grid x:Name="leftGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="15"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="4"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="4"></RowDefinition>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="4"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <!--<d3:Chart Grid.Row="1" Grid.Column="1" Title="Test Data Per Month" LegendVisibility="Collapsed">
                    <d3:BarGraph Name="wTHbarChart" Color="Blue"/>
                </d3:Chart>-->
                <lvc:CartesianChart Grid.Row="1" Grid.Column="1" DisableAnimations="True">
                    <lvc:CartesianChart.Series>
                        <lvc:LineSeries Values="{Binding Values}" PointGeometry="{x:Null}" Fill="Transparent" LineSmoothness="0"></lvc:LineSeries>
                    </lvc:CartesianChart.Series>
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis LabelFormatter="{Binding Formatter}" LabelsRotation="-90">
                            <lvc:Axis.Separator>
                                <lvc:Separator Step="{Binding Step}"/>
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                </lvc:CartesianChart>

                <d3:Chart Name="ORplotter" Grid.Row="3" Grid.Column="1" Title="Channel Occupancy Ratio For 30 Days" LegendVisibility="Collapsed" PlotOriginY="0" PlotHeight="1" PlotOriginX="0" PlotWidth="32" IsAutoFitEnabled="False">
                    <d3:BarGraph Name="ORbarChart" Color="Blue"/>
                </d3:Chart>
                <d3:Chart Grid.Row="7" Grid.Column="1" Title="Accumulated Product Per Month" LegendVisibility="Collapsed">
                    <d3:BarGraph Name="productChart" Color="Blue"/>
                </d3:Chart>
                <DockPanel VerticalAlignment="Center" Grid.Row="5" Grid.Column="1"  Grid.ColumnSpan="2" Margin="0,0,10,0" LastChildFill="True">
                    <Label DockPanel.Dock="Left" Name="StartPoint"></Label>
                    <Label DockPanel.Dock="Right" Name="EndPoint"></Label>
                    <Label HorizontalAlignment="Center" Name="MidPoint"></Label>
                </DockPanel>
            </Grid>
        </GroupBox>
        <GroupBox Header="Project Status" Grid.Column="2" Margin="20" Padding="20">
            <Grid x:Name="rightGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="4"></RowDefinition>
                    <RowDefinition Height="40*"></RowDefinition>
                    <RowDefinition Height="44"></RowDefinition>
                    <RowDefinition Height="60*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="4"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Row="0" Grid.Column="0" Name="batteryTypePanel">
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center">Battery Type:</Label>
                    <ComboBox ItemsSource="{Binding Path=BatteryTypes}" SelectedItem="{Binding Path=BatteryType}" Height="30" Width="150" HorizontalAlignment="Left" Margin="15,0,0,0"></ComboBox>
                </DockPanel>
                <DockPanel Grid.Row="0" Grid.Column="2" Name="projectPanel">
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center">Project:</Label>
                    <ComboBox ItemsSource="{Binding Path=Projects}" SelectedItem="{Binding Path=Project}" Height="30" Width="150" HorizontalAlignment="Left" Margin="15,0,0,0"></ComboBox>
                </DockPanel>
                <GroupBox Header="Test Summary" Grid.Row="2" Grid.Column="0">
                    <DockPanel LastChildFill="True">
                        <Grid Grid.Column="1" Margin="0,10" Width="140" Height="150" DockPanel.Dock="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"></ColumnDefinition>
                                <ColumnDefinition Width="2"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="2"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Row="0" Grid.Column="0" Fill="{StaticResource WaitingBrush}" Opacity="1" Stroke="#FF0000" Width="10" Height="10"></Rectangle>
                            <Rectangle Grid.Row="1" Grid.Column="0" Fill="{StaticResource CompletedBrush}" Opacity="1" Stroke="#FF0000" Width="10" Height="10"></Rectangle>
                            <Rectangle Grid.Row="2" Grid.Column="0" Fill="{StaticResource InvalidBrush}" Opacity="1" Stroke="#FF0000" Width="10" Height="10"></Rectangle>
                            <Rectangle Grid.Row="3" Grid.Column="0" Fill="{StaticResource AbandonedBrush}" Opacity="1" Stroke="#FF0000" Width="10" Height="10"></Rectangle>
                            <TextBlock Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Bold">Waiting</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Bold">Completed</TextBlock>
                            <TextBlock Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Bold">Invalid</TextBlock>
                            <TextBlock Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Bold">Abandoned</TextBlock>
                            <TextBlock Grid.Row="0" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Text="{Binding Path=WaitingAmount}"></TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Text="{Binding Path=CompletedAmount}"></TextBlock>
                            <TextBlock Grid.Row="2" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Text="{Binding Path=InvalidAmount}"></TextBlock>
                            <TextBlock Grid.Row="3" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Text="{Binding Path=AbandonedAmount}"></TextBlock>
                        </Grid>

                        <Border x:Name="ChartBorder" MaxHeight="150">
                            <Grid Width="{Binding Path=ActualHeight,RelativeSource={RelativeSource Self}}"
               x:Name="PiesGrid">

                                <xctk:Pie x:Name="WaitingPie" Mode="Slice"
                      Fill="{StaticResource WaitingBrush}"
                      Stroke="#FF000000"
                      Opacity="1"
                  StartAngle="0"
                      Slice="{Binding Path=WaitingPercentage, Mode=OneWay}" />
                                <xctk:Pie x:Name="CompletedPie" Mode="Slice"
                      Fill="{StaticResource CompletedBrush}"
                      Stroke="#FF000000"
                      Opacity="1"
                      StartAngle="{Binding Path=EndAngle, ElementName=WaitingPie, Mode=OneWay}"
                      Slice="{Binding Path=CompletedPercentage, Mode=OneWay}" />
                                <xctk:Pie x:Name="InvalidPie" Mode="Slice"
                      Fill="{StaticResource InvalidBrush}"
                      Stroke="#FF000000"
                      Opacity="1"
                      StartAngle="{Binding Path=EndAngle, ElementName=CompletedPie, Mode=OneWay}"
                      Slice="{Binding Path=InvalidPercentage, Mode=OneWay}" />
                                <xctk:Pie x:Name="AbandonedPie" Mode="Slice"
                      Fill="{StaticResource AbandonedBrush}"
                      Stroke="#FF000000"
                      Opacity="1"
                      StartAngle="{Binding Path=EndAngle, ElementName=InvalidPie, Mode=OneWay}"
                      Slice="{Binding Path=AbandonedPercentage, Mode=OneWay}" />
                            </Grid>
                        </Border>
                    </DockPanel>
                </GroupBox>
                <Grid Grid.Row="2" Grid.Column="2">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="15" Height="30">
                            <Label VerticalAlignment="Center" DockPanel.Dock="Left">Planed Days</Label>
                            <TextBox Width="40" Height="30" DockPanel.Dock="Left" VerticalContentAlignment="Center" Text="{Binding Path=PlanedDays}"></TextBox>
                            <Button Width="60" Height="30" DockPanel.Dock="Left" Margin="5,0" Command="{Binding Path=UpdateCommand}">Update</Button>
                            <ToggleButton Width="60" Height="30" DockPanel.Dock="Right" Command="{Binding Path=TimeCommand}" Content="{Binding Path=ButtonName}"></ToggleButton>
                            <xctk:DateTimePicker x:Name="TimeControl" Height="30" DockPanel.Dock="Right" Width="150" Margin="5,0"
      ShowButtonSpinner="False" ShowDropDownButton="False" TextAlignment="Center"
      Text="{Binding Path=Time, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}" 
      Validation.ErrorTemplate="{x:Null}"
      />
                        </DockPanel>
                        <d3:Chart Name="progressPlotter" Title="Progress" DockPanel.Dock="Top" PlotOriginX="0" PlotOriginY="-0.2" PlotWidth="6.5" PlotHeight="1.5" IsAutoFitEnabled="True">
                            <Grid>
                                <d3:BarGraph Name="expectedProgressBar" Description="Expected" Color="Green" X="2" Y="{Binding Path=ExpectedProgress}" BarsWidth="1"/>
                                <d3:BarGraph Name="realProgressBar" Description="Real" Color="Blue" X="4" Y="{Binding Path=RealProgress}" BarsWidth="1"/>
                            </Grid>
                        </d3:Chart>
                    </DockPanel>
                </Grid>
                <GroupBox Header="Tests" Grid.Row="4" Grid.Column="0">
                    <TabControl>
                        <TabItem Header="Waiting">
                            <ListView
                      x:Name="WaitingTestList"
      AlternationCount="2" 
      ItemContainerStyle="{StaticResource ListViewItemStyle}"
      ItemsSource="{Binding Path=WaitingTestRecords}"
      >

                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn 
            Header="Id" 
            DisplayMemberBinding="{Binding Path=Id}" 
            />
                                        <GridViewColumn 
            Header="Program" 
            DisplayMemberBinding="{Binding Path=ProgramStr}" 
            />
                                        <GridViewColumn 
            Header="Recipe" 
            DisplayMemberBinding="{Binding Path=RecipeStr}" 
            />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Completed">
                            <ListView
                      x:Name="CompletedTestList"
      AlternationCount="2" 
      ItemContainerStyle="{StaticResource ListViewItemStyle}"
      ItemsSource="{Binding Path=CompletedTestRecords}"
                      SelectedItem="{Binding Path=SelectedCompletedTestRecord, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
      >

                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn 
            Header="Id" 
            DisplayMemberBinding="{Binding Path=Id}" 
            />
                                        <GridViewColumn 
            Header="Battery" 
            DisplayMemberBinding="{Binding Path=BatteryStr}" 
            />
                                        <GridViewColumn 
            Header="Chamber" 
            DisplayMemberBinding="{Binding Path=ChamberStr}" 
            />
                                        <GridViewColumn 
            Header="Tester" 
            DisplayMemberBinding="{Binding Path=TesterStr}" 
            />
                                        <GridViewColumn 
            Header="Channel" 
            DisplayMemberBinding="{Binding Path=ChannelStr}" 
            />
                                        <GridViewColumn 
            Header="StartTime" 
            DisplayMemberBinding="{Binding Path=StartTime}" 
            />
                                        <GridViewColumn 
            Header="Duration" 
            DisplayMemberBinding="{Binding Path=Duration}" 
            />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                    </TabControl>
                </GroupBox>
                <GroupBox Header="RC Tables and Evaluation Results" Grid.Row="4" Grid.Column="2">
                    <ListView
                      x:Name="ProductList"
      AlternationCount="2" 
      ItemContainerStyle="{StaticResource ListViewItemStyle}"
      ItemsSource="{Binding Path=Products}"
      >

                        <ListView.View>
                            <GridView>
                                <!--<GridViewColumn 
            Header="Id" 
            DisplayMemberBinding="{Binding Path=Id}" 
            />-->
                                <GridViewColumn 
            Header="Type" 
            DisplayMemberBinding="{Binding Path=Type}" 
            />
                                <GridViewColumn 
            Header="EV" 
            DisplayMemberBinding="{Binding Path=IsEvaluated}" 
            />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </GroupBox>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
